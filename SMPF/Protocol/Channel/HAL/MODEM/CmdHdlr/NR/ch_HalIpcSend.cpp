Line 134: ###[NR_IPC] SendIpcIfTestInd
Line 146: ###[NR_IPC][SEND] SendTdpConfigInd:: GetDomainTypeFromRxPath: domain_type(%d)
Line 195: ###[NR_IPC][SEND] SendTdpConfigInd:: rx_path(%d), tdp_enable(%06x), cc(%d), div_cc(%d), rx_mode(%d), domain_type(%d)
Line 198: ###[NR_IPC][SEND] SendTdpConfigInd:: td_buf_idx(%04x), mixer_path(%d), agc_path(%d), rf_idx(%d), rfd_str_idx(%d), rtg_idx(%d)
Line 251: ###[NR_IPC][SEND] SendNrQsleepCtrlReq[WARNING]: Unknown event_id(%d), on(%d), qs_requested(%02x), qs_state(%d)
Line 268: ###[NR_IPC][SEND] SendNrQsleepCtrlReq[DEBUG]: qs_enable(0x%x), valid_cc_cnt(%d), qs_enabled_cc_map(0x%x)
Line 272: ###[NR_IPC][SEND] SendNrQsleepCtrlReq: "demod_cc_bitmap == 0"!!, event_id(%d), on(%d), qs_requested(%02x), qs_state(%d)
Line 299: ###[NR_IPC][SEND] SendNrQsleepCtrlReq: remained num cc#%d, demod_cc_index(%d), demod_cc_bit_map(0x%x)
Line 317: ###[NR_IPC][SEND] SendNrQsleepCtrlReq[WARNING]: No confirm message from L-CPU!!!
Line 327: ###[NR_IPC][SEND] SendNrQsleepCtrlReq: event_id(%d), on(%d), qs_requested(%02x), qs_state(%d -> %d), domain_type(%d)
Line 342: ###[NR_IPC][SEND] Monitor_IND Command(%d) Demod_Cc(%d)
Line 376: ###[NR_IPC] MTC INFO IND was Already sent!, smtc_sfn(%d), demod_cc(%d)
Line 394: ###[NR_IPC] SendMtcInfo(SSB): DemodCc(%d) Band(%d) SsbBitmap(%d, %d) SmtcDuration(%d), SmtcSfn(%d) RxBeamIdx(0x%x)
Line 404: ###[NR_IPC] SendMtcInfo(CSIRS): DemodCc(%d) Band(%d) MtcDuration(%d), SmtcSfn(%d) RxBeamIdx(0x%x)
Line 447: ###[NR_IPC][SEND] SendActDeactIpc:: Cannot wait for previous ACT/DEACT CNF from PHY(0x%x)
Line 568: ###[NR_IPC][SEND] SendActDeactIpc:: active ul bwp id does not exist
Line 593: ###[NR_IPC][SEND] SendActDeactIpc(Common Information): domain_type(%d), cmd(%d), demod_cc(%d), scell_idx(%d), tti(%d), ssb_scs(%d), ssb_pattern(%d)
Line 594: ###[NR_IPC][SEND] SendActDeactIpc(Common Information): num_act_deact_scell(%d), ue_rnti(%d), recover_flag(%d)
Line 603: ###[NR_IPC][SEND] SendActDeactIpc(BwpCtrlInfo): bw(%d), ssb_sc_offset(%d), fft_start_offset(%d), ScOffsetFlag(%d), ul_bwp_id(%d), dl_bwp_id(%d), dl_freq(%d)
Line 611: ###[NR_IPC][SEND] SendActDeactIpc(RxPathMap): cc_pri8/div8(0x%4x), rtg_bb8/rf8(0x%4x), RxMode(0x%x), rf_idx8/div8(0x%x), td_buf_idx16/div16(0x%x), size(%d), mixer8/agc8(0x%x)
Line 619: ###[NR_IPC][SEND] SendActDeactIpc(TxPathMap): core_idx(%d), lmac_cmd(%d), enc_idx(%d), mod_idx4/4(0x%x), slca_idx4/4(0x%x), txPath_idx4/4(0x%x), num_ul_layer(%d)
Line 626: ###[NR_IPC][SEND] SendActDeactIpc(UL/SLO): ul_freq(%d), ul_bw(0x%8x, scell[phy8/hal8]/rf[phy8/hal8]), duplex(%d), ul_slo_enable(%d), slo_freq_offset(%d)KHz, rf_ctrl_info(0x%3x)
Line 628: ###[NR_IPC][SEND] SendActDeactIpc(DL/SLO): dl_slo_enable(%d), dl_slo_freq_offset(%d)KHz, dl_rf_center_freq(%d)
Line 649: ###[NR_DEMOD] SendSccCqi0Ipc
Line 657: ###[TMU] PHY_L1C_OHC_SCC_CQI0_REQ cc_idx(%d), sCellIndex(%d)
Line 709: ###[NR_IPC][SEND] SendSysParamChangeReq:: Update rx_path_map(CC4/DivCC4/Rfd4/Rtg4/RxMode4) (0x%x) -> (0x%x)
Line 717: ###[NR_IPC][SEND] SendSysParamChangeReq : domain4/cmd_info4(0x%4x), event8/lcpu_event8(0x%x), changed_param(%d), demod_cc(%d), bwp_id(U=%d, D=%d)
Line 719: ###[NR_IPC][SEND] SendSysParamChangeReq : dl slo_info(%d, %d), ul slo_info(%d, %d, %d), rf_ctrl_info(%d, 0x%x)
Line 774: ###[NR_IPC][SEND] SendRxmodeChangeReq: rx_path(0x%4x, M8D8), rx_mode(0x%x), td_buf(%d, %d), rf(0x%4x, M8D8), rtg(%d), rfd_str(0x%4x, M8D8)
Line 795: ###[NR_IPC][SEND] SendLcpuInitReq:: Invalid DemodCcBitMap
Line 833: ###[NR_IPC][SEND] cc_idx(0x%x), processor_idx(0x%05x), hw_demod_idx(0x%05x)
Line 838: ###[NR_IPC][SEND] LcpuState check : core(%d), state(%d), demod_cc(%d)
Line 849: ###[NR_IPC][SEND][DEBUG] CcInfoBitmap[%d] : cc_idx(%d), processor_idx(%d), hw_demod_idx(%d)
Line 855: ###[NR_IPC][SEND] SendLcpuInitReq:: DemodCcBitMap(0x%08x), domain_type(%d), ActivStackId(%d), DrDsState(%d), NeedCpuAlloc(%d)
Line 892: ###[NR_IPC][SEND] Lcpu is in the process of initialization, demod_cc(%d), cnt(%d)
Line 914: ###[NR_IPC][SEND] SendLcpuReleaseReq:: DemodCcBitMap(0x%08x), domain_type(%d), DrDsState(%d), NeedCpuAlloc(%d)
Line 960: ###[NR_IPC][SEND] SendDrxMeasModeReq, DrxMeasMode(%d)
Line 988: ###[NR_IPC][SEND] SendWakeupTimeAcqInd:: timerType(%d), isIATOn(%d), DemodCc(%d)
Line 1045: ###[NR_IPC] SendSsbPathCtrlInd:: on_off(%d), cell_id(%d), demod_cc(0x%2x, src4/dst4), ssb_scs4/bw8(0x%3x), ssb_fft_offet(%d), SLO_offset_value(%d), domain_type(%d)
Line 1069: ###[NR_IPC][SEND] Invalid demod_cc(0x%x) @ SendNrEventReportReq
Line 1111: ###[NR_IPC][SEND] SendNrEventReportReq:: event(%d), status(%d), val(%d), target_demod_cc(0x%x)
Line 1120: ###[NR_IPC][SEND] SendPhyResumeInd
Line 1130: ###[NR_IPC][SEND] SendVoNrStatusInd:: VoNrStatus(%d)
Line 1136: ###[NR_IPC][SEND] SendUlActInd: ul_freq(%d), ul_bw(%d), num_tx_ant(%d), tx_path_idx(%d)
Line 1137: ###[NR_IPC][SEND] SendUlActInd: core_idx(%d), mod_idx(%d, %d), demod_cc(%d), domain_type(%d)
Line 1150: ###[NR_IPC][SEND] SendTxPathInfoReq: ipc_mode(%d), dac_info(0x%4x), req_num_tx(%d), as_info(0x%6x), cfg_type(%d), force_srs(%d)
